<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="_Skins_HTML5___Side_Navigation" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="hardware_reference_montana.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="Web" data-mc-toc-path="[%=System.LinkedTitle%]|Bluetooth Low Energy Baseband Controller">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>System Resources</title>
        <link href="../Resources/Stylesheets/SWM_user_manual_styles.css" rel="stylesheet" type="text/css" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1279px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://www.onsemi.com/" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div id="mc-main-content" role="main" data-mc-content-body="True">
                                    <h1 class="Heading1"><a name="System_Resources" data-mc-generated-bookmark="TOC"></a>System Resources</h1>
                                    <h2 class="Heading2"><a name="Exchange_Memory" data-mc-generated-bookmark="TOC"></a>Exchange Memory</h2>
                                    <p class="Body">Memories BB_DRAM0 and BB_DRAM1 are allocated for use by the BB controller with the S-Bus, which allows it to share data with the Arm Cortex-M33 processor; this memory area is called the exchange memory. This section gives an overview of how it works with the <span class="mc-variable hardware_reference_montana.Product_Name variable">Montana</span> Bluetooth Low Energy software and hardware.</p>
                                    <p class="Body">The exchange memory is used for several purposes. The first 256-byte area of BB_DRAM0 is dedicated to event scheduling to a maximum of 16 events, and is called the exchange table. The exchange table has 16 entries, which correspond to either successive advertising, scanning, or connection event anchor points. While the software prepares the future entries (i.e., anchor points), the hardware uses one entry to transmit/receive packets. Each exchange table entry points to a unique control structure that determines the event type to be performed. Each control structure points to a TX descriptor chained list, while a register determines the RX Descriptor location. Descriptors are chained lists in which the information/status of the current processed RX/TX packets are contained. Descriptors also contain the pointer to the next descriptor of the chained list. Each descriptor has an associated data pointer, giving the memory location of an associated data buffer. Each data buffer has a maximum length of 251 bytes.</p>
                                    <p class="Body"> Exchange table entries are fetched on a Bluetooth Low Energy Core software request, triggering a control structure and descriptors fetch at an optimized and defined period of time before the event starts.</p>
                                    <p class="Body">The software prepares the control structures in advance, and the pointer in the exchange table is only set up when this operation is completed. The Bluetooth Low Energy software stack indicates to the baseband controller that a given entry has to be processed, using the <span class="Register">BB_ACTSCHCNTL</span> register. The BB controller accesses the relevant fields in the selected exchange table entry (i.e defined timestamp, priority levels, control structure pointer, etc.). The software can prepare the next entry and safely access the pointers. These mechanisms are handled by the Bluetooth Low Energy software stack. The <a href="#Exchange" class="FigureHTML MCXref xref xrefFigureHTML">"Exchange Table, Control Structure, Descriptors and Data Buffers" figure</a> provides an overview:</p>
                                    <p>
                                        <img src="exchange_table_ctrlstruct.png" />
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="Exchange"></a>Exchange Table, Control Structure, Descriptors and Data Buffers</p>
                                    <p class="Body">Events (advertising/connection/scanning) are programmed by the means of the control structure. Depending on the settings of the control structure format, the events can be composed differently. The Bluetooth Low Energy software stack is responsible for advertising event and connection event programming. The BB controller activity scheduler generates an interrupt on each end of an event, as well as when an event is not processed: each exchange table is read and taken into account only after the current event in process is closed. The <a href="#Connecti" class="FigureHTML MCXref xref xrefFigureHTML">"Connection Event Programming and Exchange Table Pre-Fetch / Master Device Example" figure</a> and&#160;the <a href="#Connecti2" class="FigureHTML MCXref xref xrefFigureHTML">"Connection Event Programming and Exchange Table Pre-Fetch / Slave Device Example" figure</a> show the exchange table pre-fetch for a master and a slave device, and how the BB controller behaves during each connection event:</p>
                                    <p>
                                        <img src="connection_event_master_950x321.png" style="width: 950;height: 321;">
                                        </img>
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="Connecti"></a>Connection Event Programming and Exchange Table Pre-Fetch / Master Device Example</p>
                                    <p class="Body">
                                        <img src="connection_event_slave.PNG" />
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="Connecti2"></a>Connection Event Programming and Exchange Table Pre-Fetch / Slave Device Example</p>
                                    <p class="Body">The other data is kept in exchange memory, including: </p>
                                    <ul>
                                        <li>A frequency table for VCO programming of the RFFE for each Bluetooth Low Energy channel</li>
                                        <li>A Bluetooth Low Energy white list</li>
                                        <li>A Bluetooth Low Energy resolving address list</li>
                                        <li>A periodic advertisement list</li>
                                        <li>An antenna pattern ID for AoA/AoD</li>
                                    </ul>
                                    <h2 class="Heading2"><a name="Filtering_Lists_and_Device_Filtering" data-mc-generated-bookmark="TOC"></a>Filtering Lists and Device Filtering</h2>
                                    <p class="Body">Device addresses and list organization are managed by the Bluetooth Low Energy software stack. A device for which IRKs have not been exchanged stands either in the white list, or in the periodic advertiser list: in this case, the device identity is used for device filtering (if used). As soon as IRKs are exchanged, a corresponding entry in the resolving address list is created. Each entry in the resolving address list indicates whether the device is in the white list or the periodic advertiser list. The <a href="#Device" class="FigureHTML MCXref xref xrefFigureHTML">"Device Filtering Lists Organization" figure</a> shows an example of the device filtering lists organization within the BB controller:</p>
                                    <p>
                                        <img src="device_filtering_lists_org_767x359.png" style="width: 767;height: 359;">
                                        </img>
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="Device"></a>Device Filtering Lists Organization</p>
                                    <p class="Body">Device filtering is based on the peer device’s address. It is used to minimize the number of devices the system responds to during device discovery/connection. Filter policies in between advertising state, scanning state, and initiating state are independent. Device filtering policy is determined by a parameter set by the Bluetooth Low Energy stack software in the control structure of the <span class="Register">CS-FILTER_POLICY</span> field, and applies differently according to the <span class="Register">CS-FORMAT</span> value. Additionally, the RPA resolution can be enabled when the device uses Enhanced Privacy Mode. If an RPA is not resolved, depending on device filtering policy, the device might not respond to the received packet.</p>
                                    <h2 class="Heading2"><a name="AES-128_On_Software_Request" data-mc-generated-bookmark="TOC"></a>AES-128 On Software Request</h2>
                                    <p class="Body">The BB controller uses an AES-128 hardware accelerator for Bluetooth&#160;Low Energy encryption and decryption of data, and for resolving the address list engine. This HW block is available to application software. When the Bluetooth Low Energy stack is not used, this HW block can be used safely by software; but if the Bluetooth Low Energy stack is used, we recommend that application software uses GAP API (refer to the GAP documentation in the <span class="Reference"><span class="mc-variable hardware_reference_montana.Manual_FW_Reference variable">Montana Firmware Reference</span></span>), to avoid causing any issue for the Bluetooth Low Energy data being encrypted or decrypted by the BB controller.</p>
                                    <p class="Body">AES-128 can be used by the software that stores the block to cipher, in the exchange memory (in the BB_DRAM0 and BB_DRAM1 address range) at the address specified in the <span class="Register">BB_AESPTR</span> register. The block size to cipher is always considered equal to 16 bytes. The software defines the input key by setting its value in the <span class="Register">BB_AESKEY*_*</span> registers. Once the setting is done, the software begins to use AES-128 by setting the cipher mode in <span class="Register">the BB_AESCNTL_AES_MODE</span> bit of the <span class="Register">BB_AESCNTL</span> register, and writing a 1 to the  <span class="Register">BB_AESCNTL_AES_START</span> bit of the same register. On normal termination, the software receives a <span class="Code">BLE_CRYPT_IRQ</span>. When finished, the software can find the ciphered data at the <span class="Code">AESPTR</span>+16 address, as shown in the <a href="#Memory" class="FigureHTML MCXref xref xrefFigureHTML">"Memory Mapping for AES-128 Software Use" figure</a> (considering byte address memory). </p>
                                    <p class="Body">When an encrypted link layer event has to be processed, it is possible that the event controller and packet controller require AES-CCM to run while a software request is ongoing. In this case, the current ciphering process is stopped, as real time AES-CCM processing has higher priority. When the real time encryption process ends, the AES-128 FSM restarts the ciphering process until normal termination, and then the  <span class="Register">BB_AESCNTL_AES_START</span> bit of the <span class="Register">BB_AESCNTL</span>&#160;register is reset. The <span class="Register">BB_AESPTR_AESPTR</span> address defined in the <span class="Register">BB_AESPTR</span> register needs to point to the exchange memory at a location not used by the baseband controller. The software can use the below code to make sure the address pointer is not used by HW:</p>
                                    <p class="CodeLast">BB_AESPTR = (EM_ENC_IN_OFFSET &gt;&gt; 2);</p>
                                    <p class="Note" data-mc-autonum="&lt;i&gt;NOTE: &lt;/i&gt;"><span class="autonumber"><span><i>NOTE: </i></span></span>AES deciphering is not supported.</p>
                                    <p>
                                        <img src="memory_mapping_aes128_sw_644x476.png" style="width: 644;height: 476;" />
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="Memory"></a>Memory Mapping for AES-128 Software Use</p>
                                    <h2 class="Heading2"><a name="RF_Test_Modes" data-mc-generated-bookmark="TOC"></a>RF Test Modes</h2>
                                    <p class="Body">RF Test modes are dedicated to both Bluetooth RF qualification and regulatory body support. There are two main test modes supported by the BB controller: </p>
                                    <ul>
                                        <li>TX test mode, which is Bluetooth RF qualification oriented for TX modes.</li>
                                        <li>RX test mode, which is Bluetooth RF qualification oriented for RX modes.</li>
                                    </ul>
                                    <p class="Body">The access address is fixed to 0x71764129 for RF test packets.</p>
                                    <p class="Body">In the Bluetooth Low Energy specification, these tests are run in so-called Direct Test Mode (DTM). When an HCI or GAP DTM test mode command is received, the Bluetooth Low Energy software stack programs the BB controller, which then takes care of programming and sending DTM packets or configuring the RFFE for RX DTM Mode accordingly. Once the DTM <span class="Code">end</span> command is received, the Bluetooth Low Energy stack disables and removes the DTM event, and reads the number of correctly-received packets from BB controller register <span class="Register">BB_RXPKTCNT</span>, if the test mode is DTM. The number of transmitted packets can be read from register <span class="Register">BB_TXPKTCNT</span> if the text mode is DTM&#160;TX.</p>
                                    <h2 class="Heading2"><a name="Angle_of_Arrival_(AoA)_and_Angle_of_Departure_(AoD)_Support" data-mc-generated-bookmark="TOC"></a>Angle of Arrival (AoA) and Angle of Departure (AoD) Support</h2>
                                    <p class="Body">AoA/AoD can be performed through ACL connection or periodic advertising. It operates over LE 1M and LE 2M only. CTE information is located either in the packet header (ACL or Direct test Mode cases) or in the extended packet header (periodic advertising case). Both carry the same data, which is related to the type of operation (i.e., AoA/AoD) and CTE field duration. Depending on the use case, specific counting mechanisms are required for aligning baseband timings to radio/modem timings, for antenna switching instant and pattern control (TX or RX), and I&amp;Q sampling instant (RX only).</p>
                                    <p class="Body">To support AoA/AoD, the transmitter needs to add a constant tone extension (CTE) following the CRC part of a Bluetooth Low Energy packet. The CTE field is divided into three periods:</p>
                                    <ol>
                                        <li value="1">4 μs guard period, during which:<ol><li value="1">Reference antenna (i.e., the first antenna in the list) has to be used.</li><li value="2">Switching is not allowed for either transmitter or receiver.</li><li value="3">Sampling is not allowed for either transmitter or receiver.</li></ol></li>
                                        <li value="2">8 μs reference period, during which:<ol><li value="1">Reference antenna (i.e., the first antenna in the list) has to be used.</li><li value="2">Switching is not allowed for either transmitter or receiver.</li><li value="3">Sampling is required for the receiver.</li></ol></li>
                                        <li value="3">the rest of the CTE period<ol><li value="1">Antenna pattern is applied according to the provided antenna list.</li><li value="2">Switching is allowed for either transmitter or receiver, depending on the use case (AoA/AoD).</li><li value="3">Sampling is required for the receiver.</li></ol></li>
                                    </ol>
                                    <p class="Body">For further information, refer to the <span class="Reference">Bluetooth Core Specification version 5.2</span>. </p>
                                    <p class="Body">Antenna switching happens during AoD transmission or AoA reception. During AoD operations, the antenna switching interval (i.e., 1 μs or 2 μs) is determined by the value of <span class="Code">CTEType</span>, which is a field in the Bluetooth Low Energy packet header specified in the Bluetooth core specification.</p>
                                    <p class="Body">For AoD transmission, the fields <span class="Register">BB_DFCNTL0_1US_</span><span class="Register">TXSWSTINST0_1US</span>, <span class="Register">BB_DFCNTL0_2US_</span><span class="Register">TXSWSTINST0_2US</span>, <span class="Register">BB_DFCNTL1_1US_</span><span class="Register">TXSWSTINST1_1US</span>, and <span class="Register">BB_DFCNTL1_2US_</span><span class="Register">TXSWSTINST1_2US</span> of registers <span class="Register">BB_DFCNTL0_1US</span>, <span class="Register">BB_DFCNTL0_2US</span>, <span class="Register">BB_DFCNTL1_1US</span>, and <span class="Register">BB_DFCNTL1_2US</span> (respectively) control the antenna switching times for 1  Mbps PHY, 1 and 2 μs slot duration, and 2 Mbps PHY, and 1 and 2 μs slot durations, respectively.</p>
                                    <p class="Body"> For AoA reception, the fields <span class="Register">BB_DFCNTL0_1US_</span><span class="Register">RXSWSTINST0_1US</span>,  <span class="Register">BB_DFCNTL0_2US_</span><span class="Register">RXSWSTINST0_2US</span>, <span class="Register">BB_DFCNTL1_1US_</span><span class="Register">RXSWSTINST1_1US</span>, and <span class="Register">BB_DFCNTL1_2US_</span><span class="Register">RXSWSTINST1_2US</span> (respectively) of registers <span class="Register">BB_DFCNTL0_1US</span>, <span class="Register">BB_DFCNTL0_2US</span>, <span class="Register">BB_DFCNTL1_1US</span>, and <span class="Register">BB_DFCNTL1_2US</span> control the antenna switching times for 1  Mbps PHY 1, and 2 μs slot duration and 2 Mbps PHY, and 1 and 2 μs slot durations, respectively.</p>
                                    <p class="Body">These fields are in microsecond units. By increasing them, switching times are delayed, and vice versa.</p>
                                    <p class="Body">RX I&amp;Q sampling start instants are configured through the fields <span class="Register">BB_DFCNTL0_1US_</span><span class="Register">RXSAMPSTINST0_1US</span>, <span class="Register">BB_DFCNTL0_2US_</span><span class="Register">RXSAMPSTINST0_2US</span>, <span class="Register">BB_DFCNTL1_1US_</span><span class="Register">RXSAMPSTINST1_1US</span>, and <span class="Register">BB_DFCNTL1_2US_</span><span class="Register">RXSAMPSTINST1_2US</span> of registers <span class="Register">BB_DFCNTL0_1US</span>, <span class="Register">BB_DFCNTL0_2US</span>, <span class="Register">BB_DFCNTL1_1US</span>, and BB_DFCNTL1_2US (respectively), for 1 Mbps PHY, 1 and 2 μs slot durations, and 2 Mbps PHY, 1 and 2 μs slot durations, respectively.</p>
                                    <p class="Body">The Bluetooth Low Energy stack configures  sampling times and antenna switching times for an antenna switching HW, with typical 400 ns switching times from control signal to actual switching. if an external antenna switching HW has different timings, users might need to tune them accordingly. The <a href="#AoD" class="FigureHTML MCXref xref xrefFigureHTML">"AoD CTE Transmission Timing Diagram" figure</a> and&#160;the <a href="#AoA" class="FigureHTML MCXref xref xrefFigureHTML">"AoA CTE Reception Timing Diagram" figure</a> provide timing diagrams for actual HW signals during AoD TX and AoA RX:</p>
                                    <p>
                                        <img src="aod_cte_transmission_timing_1028x263.png" style="width: 1028;height: 263;">
                                        </img>
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="AoD"></a>AoD CTE Transmission Timing Diagram</p>
                                    <p>
                                        <img src="aoa_cte_reception_timing_1031x504.png" style="width: 1031;height: 504;">
                                        </img>
                                    </p>
                                    <p class="Figure_title" data-mc-autonum="Figure: "><span class="autonumber"><span>Figure: </span></span><a name="AoA"></a>AoA CTE Reception Timing Diagram</p>
                                    <p class="Body">&#160;</p>
                                    <p class="Body">&#160;</p>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>