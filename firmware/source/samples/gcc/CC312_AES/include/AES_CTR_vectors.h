/**
 * @file AES_CTR_vectors.h
 *
 * @copyright @parblock
 * Copyright (c) 2021 Semiconductor Components Industries, LLC (d/b/a
 * onsemi), All Rights Reserved
 *
 * This code is the property of onsemi and may not be redistributed
 * in any form without prior written permission from onsemi.
 * The terms of use and warranty for this code are covered by contractual
 * agreements between onsemi and the licensee.
 *
 * This is Reusable Code.
 * @endparblock
 */
#ifndef AES_CTR_VECTORS_H_
#define AES_CTR_VECTORS_H_

/* ----------------------------------------------------------------------------
 * If building with a C++ compiler, make all of the definitions in this header
 * have a C binding.
 * ------------------------------------------------------------------------- */
#ifdef __cplusplus
extern "C"
{
#endif    /* ifdef __cplusplus */

/*
 * Autogenerated Test Vectors - Do Not Edit
 */

/**
 * @brief Define the size of the plain text in bytes
 */
#define AES_CTR_PLAIN_SIZE    64


/**
 * @brief Define the plain text for the AES-CTR
 */
static const uint8_t AES_CTR_PLAIN_TEXT[] = {
        0x6B, 0xC1, 0xBE, 0xE2, 0x2E, 0x40, 0x9F, 0x96, 
        0xE9, 0x3D, 0x7E, 0x11, 0x73, 0x93, 0x17, 0x2A, 
        0xAE, 0x2D, 0x8A, 0x57, 0x1E, 0x03, 0xAC, 0x9C, 
        0x9E, 0xB7, 0x6F, 0xAC, 0x45, 0xAF, 0x8E, 0x51, 
        0x30, 0xC8, 0x1C, 0x46, 0xA3, 0x5C, 0xE4, 0x11, 
        0xE5, 0xFB, 0xC1, 0x19, 0x1A, 0x0A, 0x52, 0xEF, 
        0xF6, 0x9F, 0x24, 0x45, 0xDF, 0x4F, 0x9B, 0x17, 
        0xAD, 0x2B, 0x41, 0x7B, 0xE6, 0x6C, 0x37, 0x10
    };
    
/**
 * @brief Define the initial counter for the AES-CTR
 */
static const uint8_t AES_CTR_NONCE[] = {
        0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 
        0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF
    };
    
/**
 * @brief Define the key size for the CTR-AES128
 */
#define AES_CTR_128_KEY_SIZE    128

/**
 * @brief Define the key for the CTR-AES128
 */
static const uint8_t AES_CTR_128_KEY[] = {
        0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 
        0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C
    };

/**
 * @brief Define the expected cipher for the CTR-AES128
 */
static const uint8_t AES_CTR_128_CIPHER[] = {
        0x87, 0x4D, 0x61, 0x91, 0xB6, 0x20, 0xE3, 0x26, 
        0x1B, 0xEF, 0x68, 0x64, 0x99, 0x0D, 0xB6, 0xCE, 
        0x98, 0x06, 0xF6, 0x6B, 0x79, 0x70, 0xFD, 0xFF, 
        0x86, 0x17, 0x18, 0x7B, 0xB9, 0xFF, 0xFD, 0xFF, 
        0x5A, 0xE4, 0xDF, 0x3E, 0xDB, 0xD5, 0xD3, 0x5E, 
        0x5B, 0x4F, 0x09, 0x02, 0x0D, 0xB0, 0x3E, 0xAB, 
        0x1E, 0x03, 0x1D, 0xDA, 0x2F, 0xBE, 0x03, 0xD1, 
        0x79, 0x21, 0x70, 0xA0, 0xF3, 0x00, 0x9C, 0xEE
    };
    
/**
 * @brief Define the key size for the CTR-AES192
 */
#define AES_CTR_192_KEY_SIZE    192

/**
 * @brief Define the key for the CTR-AES192
 */
static const uint8_t AES_CTR_192_KEY[] = {
        0x8E, 0x73, 0xB0, 0xF7, 0xDA, 0x0E, 0x64, 0x52, 
        0xC8, 0x10, 0xF3, 0x2B, 0x80, 0x90, 0x79, 0xE5, 
        0x62, 0xF8, 0xEA, 0xD2, 0x52, 0x2C, 0x6B, 0x7B
    };

/**
 * @brief Define the expected cipher for the CTR-AES192
 */
static const uint8_t AES_CTR_192_CIPHER[] = {
        0x1A, 0xBC, 0x93, 0x24, 0x17, 0x52, 0x1C, 0xA2, 
        0x4F, 0x2B, 0x04, 0x59, 0xFE, 0x7E, 0x6E, 0x0B, 
        0x09, 0x03, 0x39, 0xEC, 0x0A, 0xA6, 0xFA, 0xEF, 
        0xD5, 0xCC, 0xC2, 0xC6, 0xF4, 0xCE, 0x8E, 0x94, 
        0x1E, 0x36, 0xB2, 0x6B, 0xD1, 0xEB, 0xC6, 0x70, 
        0xD1, 0xBD, 0x1D, 0x66, 0x56, 0x20, 0xAB, 0xF7, 
        0x4F, 0x78, 0xA7, 0xF6, 0xD2, 0x98, 0x09, 0x58, 
        0x5A, 0x97, 0xDA, 0xEC, 0x58, 0xC6, 0xB0, 0x50
    };
    
/**
 * @brief Define the key size for the CTR-AES256
 */
#define AES_CTR_256_KEY_SIZE    256

/**
 * @brief Define the key for the CTR-AES256
 */
static const uint8_t AES_CTR_256_KEY[] = {
        0x60, 0x3D, 0xEB, 0x10, 0x15, 0xCA, 0x71, 0xBE, 
        0x2B, 0x73, 0xAE, 0xF0, 0x85, 0x7D, 0x77, 0x81, 
        0x1F, 0x35, 0x2C, 0x07, 0x3B, 0x61, 0x08, 0xD7, 
        0x2D, 0x98, 0x10, 0xA3, 0x09, 0x14, 0xDF, 0xF4
    };

/**
 * @brief Define the expected cipher for the CTR-AES256
 */
static const uint8_t AES_CTR_256_CIPHER[] = {
        0x60, 0x1E, 0xC3, 0x13, 0x77, 0x57, 0x89, 0xA5, 
        0xB7, 0xA7, 0xF5, 0x04, 0xBB, 0xF3, 0xD2, 0x28, 
        0xF4, 0x43, 0xE3, 0xCA, 0x4D, 0x62, 0xB5, 0x9A, 
        0xCA, 0x84, 0xE9, 0x90, 0xCA, 0xCA, 0xF5, 0xC5, 
        0x2B, 0x09, 0x30, 0xDA, 0xA2, 0x3D, 0xE9, 0x4C, 
        0xE8, 0x70, 0x17, 0xBA, 0x2D, 0x84, 0x98, 0x8D, 
        0xDF, 0xC9, 0xC5, 0x8D, 0xB6, 0x7A, 0xAD, 0xA6, 
        0x13, 0xC2, 0xDD, 0x08, 0x45, 0x79, 0x41, 0xA6
    };
    
/* ----------------------------------------------------------------------------
 * Close the 'extern "C"' block
 * ------------------------------------------------------------------------- */
#ifdef __cplusplus
}
#endif    /* ifdef __cplusplus */

#endif /* AES_CTR_VECTORS_H_ */
