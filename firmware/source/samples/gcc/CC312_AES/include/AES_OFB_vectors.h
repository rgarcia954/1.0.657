/**
 * @file AES_OFB_vectors.h
 *
 * @copyright @parblock
 * Copyright (c) 2021 Semiconductor Components Industries, LLC (d/b/a
 * onsemi), All Rights Reserved
 *
 * This code is the property of onsemi and may not be redistributed
 * in any form without prior written permission from onsemi.
 * The terms of use and warranty for this code are covered by contractual
 * agreements between onsemi and the licensee.
 *
 * This is Reusable Code.
 * @endparblock
 */
#ifndef AES_OFB_VECTORS_H_
#define AES_OFB_VECTORS_H_

/* ----------------------------------------------------------------------------
 * If building with a C++ compiler, make all of the definitions in this header
 * have a C binding.
 * ------------------------------------------------------------------------- */
#ifdef __cplusplus
extern "C"
{
#endif    /* ifdef __cplusplus */

/*
 * Autogenerated Test Vectors - Do Not Edit
 */

/**
 * @brief Define the size of the plain text in bytes
 */
#define AES_OFB_PLAIN_SIZE    64


/**
 * @brief Define the plain text for the AES-OFB
 */
static const uint8_t AES_OFB_PLAIN_TEXT[] = {
        0x6B, 0xC1, 0xBE, 0xE2, 0x2E, 0x40, 0x9F, 0x96, 
        0xE9, 0x3D, 0x7E, 0x11, 0x73, 0x93, 0x17, 0x2A, 
        0xAE, 0x2D, 0x8A, 0x57, 0x1E, 0x03, 0xAC, 0x9C, 
        0x9E, 0xB7, 0x6F, 0xAC, 0x45, 0xAF, 0x8E, 0x51, 
        0x30, 0xC8, 0x1C, 0x46, 0xA3, 0x5C, 0xE4, 0x11, 
        0xE5, 0xFB, 0xC1, 0x19, 0x1A, 0x0A, 0x52, 0xEF, 
        0xF6, 0x9F, 0x24, 0x45, 0xDF, 0x4F, 0x9B, 0x17, 
        0xAD, 0x2B, 0x41, 0x7B, 0xE6, 0x6C, 0x37, 0x10
    };
    
/**
 * @brief Define the initial value for the AES-OFB
 */
static const uint8_t AES_OFB_IV[] = {
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 
        0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
    };
    
/**
 * @brief Define the key size for the OFB-AES128
 */
#define AES_OFB_128_KEY_SIZE    128

/**
 * @brief Define the key for the OFB-AES128
 */
static const uint8_t AES_OFB_128_KEY[] = {
        0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 
        0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C
    };

/**
 * @brief Define the expected cipher for the OFB-AES128
 */
static const uint8_t AES_OFB_128_CIPHER[] = {
        0x3B, 0x3F, 0xD9, 0x2E, 0xB7, 0x2D, 0xAD, 0x20, 
        0x33, 0x34, 0x49, 0xF8, 0xE8, 0x3C, 0xFB, 0x4A, 
        0x77, 0x89, 0x50, 0x8D, 0x16, 0x91, 0x8F, 0x03, 
        0xF5, 0x3C, 0x52, 0xDA, 0xC5, 0x4E, 0xD8, 0x25, 
        0x97, 0x40, 0x05, 0x1E, 0x9C, 0x5F, 0xEC, 0xF6, 
        0x43, 0x44, 0xF7, 0xA8, 0x22, 0x60, 0xED, 0xCC, 
        0x30, 0x4C, 0x65, 0x28, 0xF6, 0x59, 0xC7, 0x78, 
        0x66, 0xA5, 0x10, 0xD9, 0xC1, 0xD6, 0xAE, 0x5E
    };
    
/**
 * @brief Define the key size for the OFB-AES192
 */
#define AES_OFB_192_KEY_SIZE    192

/**
 * @brief Define the key for the OFB-AES192
 */
static const uint8_t AES_OFB_192_KEY[] = {
        0x8E, 0x73, 0xB0, 0xF7, 0xDA, 0x0E, 0x64, 0x52, 
        0xC8, 0x10, 0xF3, 0x2B, 0x80, 0x90, 0x79, 0xE5, 
        0x62, 0xF8, 0xEA, 0xD2, 0x52, 0x2C, 0x6B, 0x7B
    };

/**
 * @brief Define the expected cipher for the OFB-AES192
 */
static const uint8_t AES_OFB_192_CIPHER[] = {
        0xCD, 0xC8, 0x0D, 0x6F, 0xDD, 0xF1, 0x8C, 0xAB, 
        0x34, 0xC2, 0x59, 0x09, 0xC9, 0x9A, 0x41, 0x74, 
        0xFC, 0xC2, 0x8B, 0x8D, 0x4C, 0x63, 0x83, 0x7C, 
        0x09, 0xE8, 0x17, 0x00, 0xC1, 0x10, 0x04, 0x01, 
        0x8D, 0x9A, 0x9A, 0xEA, 0xC0, 0xF6, 0x59, 0x6F, 
        0x55, 0x9C, 0x6D, 0x4D, 0xAF, 0x59, 0xA5, 0xF2, 
        0x6D, 0x9F, 0x20, 0x08, 0x57, 0xCA, 0x6C, 0x3E, 
        0x9C, 0xAC, 0x52, 0x4B, 0xD9, 0xAC, 0xC9, 0x2A
    };
    
/**
 * @brief Define the key size for the OFB-AES256
 */
#define AES_OFB_256_KEY_SIZE    256

/**
 * @brief Define the key for the OFB-AES256
 */
static const uint8_t AES_OFB_256_KEY[] = {
        0x60, 0x3D, 0xEB, 0x10, 0x15, 0xCA, 0x71, 0xBE, 
        0x2B, 0x73, 0xAE, 0xF0, 0x85, 0x7D, 0x77, 0x81, 
        0x1F, 0x35, 0x2C, 0x07, 0x3B, 0x61, 0x08, 0xD7, 
        0x2D, 0x98, 0x10, 0xA3, 0x09, 0x14, 0xDF, 0xF4
    };

/**
 * @brief Define the expected cipher for the OFB-AES256
 */
static const uint8_t AES_OFB_256_CIPHER[] = {
        0xDC, 0x7E, 0x84, 0xBF, 0xDA, 0x79, 0x16, 0x4B, 
        0x7E, 0xCD, 0x84, 0x86, 0x98, 0x5D, 0x38, 0x60, 
        0x4F, 0xEB, 0xDC, 0x67, 0x40, 0xD2, 0x0B, 0x3A, 
        0xC8, 0x8F, 0x6A, 0xD8, 0x2A, 0x4F, 0xB0, 0x8D, 
        0x71, 0xAB, 0x47, 0xA0, 0x86, 0xE8, 0x6E, 0xED, 
        0xF3, 0x9D, 0x1C, 0x5B, 0xBA, 0x97, 0xC4, 0x08, 
        0x01, 0x26, 0x14, 0x1D, 0x67, 0xF3, 0x7B, 0xE8, 
        0x53, 0x8F, 0x5A, 0x8B, 0xE7, 0x40, 0xE4, 0x84
    };
    
/* ----------------------------------------------------------------------------
 * Close the 'extern "C"' block
 * ------------------------------------------------------------------------- */
#ifdef __cplusplus
}
#endif    /* ifdef __cplusplus */

#endif /* AES_OFB_VECTORS_H_ */
